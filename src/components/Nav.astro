---
import { readFileSync } from "node:fs";
import { Icon } from "astro-icon/components";
import CornerBuddy from "./CornerBuddy.astro";

const lemonLogoSvg = readFileSync("./src/icons/lemon-logo.svg", {
  encoding: "utf8",
});
const { pathname } = Astro.url;
---

<div
  class="menu sticky top-8 z-50 mx-auto mt-[var(--content-margin)] min-h-[52px] min-w-[150px] max-w-[700px] -translate-y-1/2 px-2 py-3 md:hidden"
>
  <button
    type="button"
    class="menu-open script-hidden flex items-center gap-2 rounded-full px-6 font-hatch text-xl text-fujo-pink md:hidden"
  >
    <Icon name="lucide:menu" class="inline stroke-2 text-2xl font-bold" />Menu
  </button>
  <noscript>
    <nav
      class="flex flex-wrap rounded-full bg-white px-4 font-hatch text-xl text-fujo-pink"
    >
      <a
        aria-current={pathname.startsWith("/projects") ? "page" : "false"}
        class:list={{
          current: pathname.startsWith("/projects"),
        }}
        href="/projects">Projects</a
      >
      <a
        aria-current={pathname.startsWith("/about") ? "page" : "false"}
        class:list={{
          current: pathname.startsWith("/about"),
        }}
        href="/about">About</a
      >
      <a
        aria-current={pathname.startsWith("/fujoshi") ? "page" : "false"}
        class:list={{
          current: pathname.startsWith("/fujoshi"),
        }}
        href="/fujoshi">Fujoshi</a
      >
      <a
        aria-current={pathname.startsWith("/updates") ? "page" : "false"}
        class:list={{
          current: pathname.startsWith("/updates"),
        }}
        href="/updates">Updates</a
      >
      <a
        aria-current={pathname.startsWith("/support") ? "page" : "false"}
        class:list={{
          current: pathname.startsWith("/support"),
        }}
        href="/support">Support</a
      >
    </nav>
  </noscript>
</div>
<nav
  class="big-screen sticky top-8 z-30 mt-[var(--content-margin)] hidden -translate-y-1/2 transform items-center justify-around rounded-full font-hatch text-xl text-fujo-pink md:flex"
>
  <a
    aria-current={pathname == "/" ? "page" : "false"}
    aria-label="Home"
    class:list={{
      current: pathname == "/",
    }}
    class="lemon"
    href="/"><span set:html={lemonLogoSvg} /></a
  >

  <a
    aria-current={pathname.startsWith("/projects") ? "page" : "false"}
    class:list={{
      current: pathname.startsWith("/projects"),
    }}
    href="/projects"><span>Projects</span></a
  >
  <a
    aria-current={pathname.startsWith("/about") ? "page" : "false"}
    class:list={{
      current: pathname.startsWith("/about"),
    }}
    href="/about"><span>About</span></a
  >
  <a
    aria-current={pathname.startsWith("/fujoshi") ? "page" : "false"}
    class:list={{
      current: pathname.startsWith("/fujoshi"),
    }}
    href="/fujoshi"><span>Fujoshi</span></a
  >
  <!-- <a
    aria-current={pathname.startsWith("/updates") ? "page" : "false"}
    class:list={{
      current: pathname.startsWith("/updates"),
    }}
    href="/updates"><span>Updates</span></a
  > -->
  <a
    aria-current={pathname.startsWith("/support") ? "page" : "false"}
    class:list={{
      current: pathname.startsWith("/support"),
    }}
    href="/support"><span>Support us</span></a
  >
</nav>
<dialog class="menu-dialog relative m-0 h-dvh max-h-dvh w-full max-w-full">
  <nav
    class="small-screen z-20 flex h-full flex-col items-center justify-between gap-1 bg-white px-2 pb-[200px] pt-8 text-center font-hatch text-2xl text-fujo-pink"
  >
    <a
      autofocus
      aria-current={pathname == "/" ? "page" : "false"}
      class:list={{
        current: pathname == "/",
      }}
      href="/">Home</a
    >
    <a
      aria-current={pathname.startsWith("/projects") ? "page" : "false"}
      class:list={{
        current: pathname.startsWith("/projects"),
      }}
      href="/projects">Projects</a
    >
    <a
      aria-current={pathname.startsWith("/about") ? "page" : "false"}
      class:list={{
        current: pathname.startsWith("/about"),
      }}
      href="/about">About</a
    >
    <a
      aria-current={pathname.startsWith("/fujoshi") ? "page" : "false"}
      class:list={{
        current: pathname.startsWith("/fujoshi"),
      }}
      href="/fujoshi">Fujoshi</a
    >
    <!-- <a
      aria-current={pathname.startsWith("/updates") ? "page" : "false"}
      class:list={{
        current: pathname.startsWith("/updates"),
      }}
      href="/updates">Updates</a
    > -->
    <a
      aria-current={pathname.startsWith("/support") ? "page" : "false"}
      class:list={{
        current: pathname.startsWith("/support"),
      }}
      href="/support">Support us</a
    >
    <button
      type="button"
      class="menu-close absolute right-1 top-1 flex items-center gap-2 rounded-full px-4 py-4 text-2xl"
    >
      <Icon
        name="lucide:x"
        class="inline stroke-2 text-2xl font-bold"
        aria-label={"close menu"}
      /><span class="hidden min-[450px]:inline">CLOSE</span>
    </button>
  </nav>
  <CornerBuddy showOnMobile />
</dialog>

<style>
  nav.big-screen::before,
  .menu::before {
    background: radial-gradient(circle at center, #4360f7, #70a8e4);
    background-size: 250% 250%;
    content: "";
    position: absolute;
    top: -2px;
    left: -2px;
    right: -2px;
    bottom: -2px;
    z-index: -2;
    @apply rounded-full;
  }
  nav.big-screen::after,
  .menu::after {
    background: white;
    content: "";
    position: absolute;
    top: 0px;
    left: 0px;
    right: 0px;
    bottom: 0px;
    z-index: -1;
    @apply rounded-full;
  }

  .small-screen a,
  .big-screen a span {
    @apply block px-4 py-1;
  }
  nav.small-screen a {
    @apply px-6 py-2;
  }
  a:first-child,
  a:nth-child(2) {
    @apply ml-0;
  }
  .small-screen a.current:not(.lemon),
  .big-screen a.current:not(.lemon) span {
    @apply rounded-full bg-fujo-blue  text-white;
  }
  .menu-close:focus-visible,
  .menu-close:hover,
  .small-screen a:not(.current):hover,
  .small-screen a:not(.current):focus-visible,
  .big-screen a:not(.current):hover span {
    @apply rounded-full bg-fujo-blue/20  text-fujo-blue backdrop-blur-lg backdrop-filter;
  }

  .big-screen .lemon span {
    @apply block p-1.5;
  }

  .big-screen a {
    @apply p-1.5;
  }
  .lemon {
    @apply absolute left-0;
  }

  .lemon span :global(svg) {
    width: 24px;
    height: 24px;
    stroke: theme("colors.fujo-pink");
    filter: drop-shadow(2px 2px 3px #ff38eb66);
  }
  .lemon.current[aria-current] :global(svg) {
    fill: #ffc800;
    stroke: black;
    filter: drop-shadow(2px 2px 3px #00000066);
  }

  .script-hidden {
    display: none;
  }

  @media (prefers-reduced-motion: reduce) {
    nav.big-screen {
      padding-left: calc(52px);
    }
  }

  @media (prefers-reduced-motion: no-preference) {
    nav.big-screen::before,
    .menu::before {
      animation:
        gradient 10s ease infinite,
        shadow linear both;
      animation-timeline: none, scroll(root);
    }

    @keyframes gradient {
      0% {
        background-position: 0% 50%;
      }
      50% {
        background-position: 100% 50%;
      }
      100% {
        background-position: 0% 50%;
      }
    }

    nav.big-screen {
      animation: pad linear both;
      animation-timeline: scroll();
      animation-range: entry 0% exit 5%;
    }
    .lemon {
      animation: appear linear both;
      animation-timeline: scroll();
      animation-range: entry 0% exit 5%;
    }

    @keyframes pad {
      from {
        padding-left: 0;
      }
      to {
        padding-left: calc(52px);
      }
    }
    @keyframes shadow {
      from {
        filter: drop-shadow(0 0 0 #4360f7);
      }
      to {
        filter: drop-shadow(2px 2px 7px #4360f7);
      }
    }
    @keyframes appear {
      from {
        width: 0;
        opacity: 0;
      }
      to {
        width: calc(52px);
        opacity: 1;
      }
    }
  }
</style>
<script>
  const openMenu = document.querySelector(".menu-open");
  openMenu?.classList.remove("script-hidden");
  const menu = document.querySelector(".menu");
  const menuDialog = document.querySelector<HTMLDialogElement>(".menu-dialog");
  const closeMenu = document.querySelector(".menu-close");

  let scrollLocation = 0;

  openMenu?.addEventListener("click", () => {
    menu?.classList.add("script-hidden");
    scrollLocation = window.scrollY;
    menuDialog?.showModal();
    document.documentElement.style.overflowY = "hidden";
  });
  closeMenu?.addEventListener("click", () => {
    menuDialog?.close();
  });
  menuDialog?.addEventListener("close", () => {
    document.documentElement.style.overflowY = "";
    scrollTo({ top: scrollLocation, behavior: "instant" });
    menu?.classList.remove("script-hidden");
  });

  const resizeObserver = new ResizeObserver((entries) => {
    for (const entry of entries) {
      if (
        entry.borderBoxSize[0]?.inlineSize >= 768 ||
        entry.contentRect.width >= 768
      ) {
        menuDialog?.close();
      }
    }
  });
  const body = document.querySelector("body");
  if (body) {
    resizeObserver.observe(body);
  }
</script>
