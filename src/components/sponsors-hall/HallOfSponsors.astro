---
import { Icon } from "astro-icon/components";
import { getCollection } from "astro:content";
import Git from "./git.png";
import { Image } from "astro:assets";

const sponsors = await getCollection("sponsors");
---

<dialog
  class="sponsors-hall fixed bottom-0 left-0 right-0 top-0 z-40 flex h-dvh w-full justify-center bg-transparent"
>
  <button class="close absolute right-1 top-1" aria-label="close modal">
    <Icon name="lucide:x" size={32} /></button
  >
  <div
    class="background isolate z-40 mb-3 mt-[7.5rem] flex w-full justify-center rounded-xl bg-white/50 px-8 py-4 shadow-sm backdrop-blur-lg backdrop-filter"
  >
    <div
      class="text-nyancat-blue flex w-full -translate-y-[6rem] flex-col text-center font-zeitung shadow-white drop-shadow-sm"
    >
      <div
        class="left-0 right-0 top-0 mx-auto my-0 block aspect-[360/212] h-auto w-full max-w-[360px] rounded-3xl bg-slate-500 bg-contain bg-center"
        style={`background-image: url(${Git.src})`}
      >
      </div>
      <div class="dialogue-title">Fujocoded LLC</div>
      <div class="dialogue-subtitle mb-4">HALL OF SUPPORTERS</div>
      <div
        class="wall grid max-h-full w-full grid-cols-1 gap-2 overflow-y-scroll md:grid-cols-2 lg:grid-cols-3"
      >
        {
          sponsors.map((sponsor) => {
            return (
              <div class="flex min-w-min justify-between gap-4 rounded-xl border border-white border-opacity-60 bg-white/30 px-5 py-4">
                <Image
                  height={sponsor.data.avatar.height}
                  width={sponsor.data.avatar.width}
                  class="supporter-icon h-[72px] w-[72px] rounded-full"
                  src={sponsor.data.avatar}
                  alt="TODO"
                />
                <div class="flex flex-grow flex-col gap-2">
                  <span class="supporter-title w-max font-macho text-2xl font-bold text-[#A700CF]">
                    {sponsor.data.name}
                  </span>
                  <div class="badges flex flex-wrap gap-1">
                    {sponsor.data.pledges.map((pledge) => {
                      return (
                        <span
                          class={`w-max rounded-md border border-black border-opacity-20 px-2 pb-1 pt-0.5 font-macho text-sm font-medium leading-none  shadow-sm ${pledge.tier.toLowerCase()}-pledge badge`}
                        >
                          {pledge.campaign}: {pledge.tier}
                        </span>
                      );
                    })}
                  </div>
                  <ul class="flex gap-2">
                    {sponsor.data.contacts.map((contact) => {
                      return (
                        <li class="mt-0">
                          <a
                            href={contact.url}
                            class="block h-full w-full rounded-md bg-[#8A71E5] bg-opacity-20 p-2 hover:bg-opacity-25"
                          >
                            <Icon
                              class="text-2xl"
                              name={contact.icon || "lucide:link"}
                            />
                          </a>
                        </li>
                      );
                    })}
                  </ul>
                </div>
              </div>
            );
          })
        }
        <!-- {
          Array.apply(null, Array(100)).map((sponsor) => {
            return (
              <div class="flex min-w-min justify-between gap-4 rounded-md border border-white border-opacity-60 bg-white/30 px-5 py-4">
                <Image
                  height="72"
                  width="72"
                  class="supporter-icon h-[72px] w-[72px] rounded-full"
                  src={ComingSoon}
                  alt="TODO"
                />
                <div class="flex flex-grow flex-col gap-2">
                  <span class="supporter-title w-max font-macho text-2xl font-bold text-[#A700CF]">
                    {"Train goes choo choo"}
                  </span>
                  <div class="badges flex flex-wrap gap-1">
                    <span class="gold-pledge badge w-max rounded-md border  border-black border-opacity-20 px-2 pb-1 pt-0.5 font-macho text-sm  font-medium leading-none shadow-sm">
                      {"Fujoguide: Gold"}
                    </span>
                    <span class="silver-pledge badge w-max rounded-md border  border-black border-opacity-20 px-2 pb-1 pt-0.5 font-macho text-sm  font-medium leading-none shadow-sm">
                      {"Fujoguide: Silver"}
                    </span>
                    <span class="bronze-pledge badge w-max rounded-md border  border-black border-opacity-20 px-2 pb-1 pt-0.5 font-macho text-sm  font-medium leading-none shadow-sm">
                      {"Fujoguide: Bronze"}
                    </span>
                  </div>
                  <ul class="flex gap-2">
                    <li class="mt-0">
                      <a
                        href="#"
                        class="block h-full w-full rounded-md bg-[#8A71E5] bg-opacity-20 p-2 hover:bg-opacity-25"
                      >
                        <Icon class="text-2xl" name="lucide:github" />
                      </a>
                    </li>
                    <li class="mt-0">
                      <a
                        href="#"
                        class="block h-full w-full rounded-md bg-[#8A71E5] bg-opacity-20 p-2 hover:bg-opacity-25"
                      >
                        <Icon class="text-2xl" name="lucide:twitter" />
                      </a>
                    </li>
                  </ul>
                </div>
              </div>
            );
          })
        } -->
      </div>
    </div>
  </div>

  <style>
    @font-face {
      font-family: "Handjet";
      src:
        url("/fonts/handjet-variablefont_elgrelshwght-webfont.woff2")
          format("woff2"),
        url("/fonts/handjet-variablefont_elgrelshwght-webfont.woff")
          format("woff");
      font-weight: normal;
      font-style: normal;
      font-display: swap;
    }
    dialog:not([open]) {
      display: none;
    }
    .wall {
      scrollbar-width: none;
    }
    .wall::-webkit-scrollbar {
      display: none;
    }
    .supporter-icon {
      width: 72px;
      height: 72px;
      border: 1px solid #ffffff26;
      box-shadow: 0px 2px 10px 0px #00000026;
    }
    .dialogue-title,
    .dialogue-subtitle {
      font-family: Handjet, sans-serif;
      color: #013368;
      font-weight: 700;
      font-size: 46px;
      line-height: 46px;
      text-shadow: #ffffff73 0px 3px;
    }
    .badge.gold-pledge {
      --h: 47;
      --s: 100%;
      --l: 50%;
      --a: 1;
    }
    .badge.silver-pledge {
      --h: 0;
      --s: 0%;
      --l: 75%;
      --a: 1;
    }
    .badge.bronze-pledge {
      --h: 37;
      --s: 81%;
      --l: 50%;
      --a: 1;
    }

    .badge {
      --badge-color: hsla(var(--h), var(--s), var(--l), var(--a));
      --badge-color-darker: hsla(var(--h), var(--s), 20%, var(--a));
      --badge-color-lighter: hsla(var(--h), var(--s), 90%, 0.8);

      color: var(--badge-color-darker);

      background-image: linear-gradient(
        120deg,
        var(--badge-color) 0%,
        var(--badge-color) 5%,
        var(--badge-color-lighter) 15%,
        var(--badge-color) 20%,
        var(--badge-color) 100%
      );
      background-size: 200% 200%;
      position: relative;
      overflow: hidden;
      background-position-x: 80%;
      animation: TransitioningBackground 8s ease-out normal infinite;
    }

    @keyframes TransitioningBackground {
      0% {
        background-position-x: 250%;
      }
      12% {
        background-position-x: 80%;
      }
      100% {
        background-position-x: 80%;
      }
    }

    dialog::backdrop {
      backdrop-filter: blur(16px);
      background-color: rgb(67 96 247 / 0.5);
    }
  </style>

  <script>
    import { KonamiTriggeredEventCode } from "../KonamiCode";

    let dialog = document.querySelector<HTMLDialogElement>(
      "dialog.sponsors-hall"
    );

    dialog?.showModal();

    document.addEventListener(KonamiTriggeredEventCode, () => {
      dialog?.showModal();
    });

    document.addEventListener("click", function (event) {
      let rect = dialog!.querySelector("div")!.getBoundingClientRect();

      let isInDialog =
        rect.top <= event.clientY &&
        event.clientY <= rect.top + rect.height &&
        rect.left <= event.clientX &&
        event.clientX <= rect.left + rect.width;

      if (!isInDialog) {
        dialog!.close();
      }
    });

    dialog?.querySelector("button")?.addEventListener("click", () => {
      dialog!.close();
    });
  </script>
</dialog>
