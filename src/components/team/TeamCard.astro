---
import { Icon } from "astro-icon/components";
import { Image } from "astro:assets";
import type { SocialLinksData } from "@fujocoded/zod-transform-socials";

interface Props {
  name: string;
  avatar: string;
  contacts: SocialLinksData;
}

const { name, contacts, avatar } = Astro.props;
---

<div
  class="outer-box relative z-10 flex w-80 min-w-72 max-w-full flex-col gap-4 rounded-xl bg-white md:pb-[1.125rem]"
>
  <h3
    class="font- m-0 flex items-center gap-3 self-center px-3 pt-5 text-xl not-italic"
    id={`${name.toLowerCase().replace(/\s+/g, "-")}`}
  >
    <a
      href={`/team/${name.toLowerCase().replace(/\s+/g, "-")}`}
      class="hover:pointer flex items-center gap-4 !no-underline"
    >
      <span class="-mt-1 font-zeitung text-fujo-pink">{name}</span>
      <Image
        class="rounded-xl object-cover"
        width={40}
        height={40}
        src={avatar}
        alt=""
      />
    </a>
  </h3>
  <ul class="flex flex-col p-4 pb-2.5 pt-0 md:p-6 md:pb-[1.125rem] md:pt-0">
    {
      contacts.map((contact) => {
        const url = new URL(contact.url);
        return (
          <li class="mt-0">
            <a
              href={contact.url}
              class="group flex items-center gap-3 py-1.5 !no-underline"
            >
              <div class="flex rounded-lg bg-fujo-purple/10 p-2 group-hover:bg-fujo-purple/20">
                <Icon
                  size={24}
                  aria-labelledby={
                    contact.platform !== "web" ? "platform" : undefined
                  }
                  aria-label={
                    contact.platform === "web" ? "website" : undefined
                  }
                  name={contact.icon ?? "world-www"}
                  class="flex-shrink-0"
                />
              </div>
              {contact.platform !== "web" && (
                <span class="sr-only" id="platform">
                  {contact.platform}:{" "}
                </span>
              )}
              <span class="-mt-1 truncate">
                {contact.username
                  ? `@${contact.username}`
                  : `${url.hostname}${url.pathname == "/" ? "" : url.pathname}`}
              </span>
            </a>
          </li>
        );
      })
    }
  </ul>
</div>
<style>
  .outer-box::before {
    /* background: linear-gradient(180deg, #ff21e9 0%, #4360f7 100%); */
    background: radial-gradient(circle at center, #ff21e9, #4360f7);
    background-size: 500% 500%;
    content: "";
    position: absolute;
    top: -2px;
    left: -2px;
    right: -2px;
    bottom: -2px;
    z-index: -2;
    /* @apply rounded-xl; */
    border-radius: calc(0.75rem + 2px);
  }
  .outer-box::after {
    background-color: white;
    background-size: 500% 500%;
    content: "";
    position: absolute;
    top: 0px;
    left: 0;
    right: 0;
    bottom: 0;
    z-index: -1;
    /* @apply rounded-xl; */
    border-radius: calc(0.75rem);
  }
  .outer-box:global(:has(*:target)) h3 {
    font-weight: bold;
  }
  .outer-box:global(:has(*:target))::after {
    background-color: #ffd8fb;
  }

  @media (prefers-reduced-motion: no-preference) {
    .outer-box::before {
      animation: gradient 15s ease infinite;
      transform: translate3d(0px, 0px, 0.1px);
      overflow-clip-margin: unset;
    }
    .outer-box::after {
      animation: gradient 15s ease infinite;
      transform: translate3d(0px, 0px, 0.1px);
      overflow-clip-margin: unset;
    }

    @keyframes gradient {
      0% {
        background-position: 0% 50%;
      }
      50% {
        background-position: 100% 50%;
      }
      100% {
        background-position: 0% 50%;
      }
    }
  }
</style>
