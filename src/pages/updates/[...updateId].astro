---
import { getCollection } from "astro:content";
import Layout from "../../layouts/Layout.astro";
import { Icon } from "astro-icon/components";
import SubscriptionForm from "../../components/SubscriptionForm.astro";

export async function getStaticPaths() {
  const updates = await getCollection("updates");
  return Promise.all(
    updates.map(async (update) => ({
      params: {
        updateId: update.slug,
      },
      props: {
        Content: (await update.render()).Content,
        data: update.data,
      },
    }))
  );
}

const { Content, data } = Astro.props;
---

<Layout
  title={data.og_title ? data.og_title : `${data.title} – FujoCoded`}
  preview={data.og_image?.src}
  description={data.og_description || data.tagline}
>
  <article class="m-auto rounded-xl bg-white drop-shadow-purple">
    <div class="m-auto mb-8 border-b-2 border-dotted pb-8">
      <date class="mb-2" style="font-variant: small-caps;"
        >{
          data.created_at.toLocaleDateString("en-US", {
            year: "numeric",
            month: "long",
            day: "numeric",
          })
        }</date
      >
      <h1
        class="m-0 mb-1 text-left font-hatch text-[34px] text-fujo-pink"
        set:html={data.title}
      />
      {
        data.tagline && (
          <h2 class="tagline m-0 mb-2 text-left text-[24px] text-slate-500">
            {data.tagline}
          </h2>
        )
      }
    </div>
    <div class="prose prose-lg m-auto mt-4 max-w-max">
      <Content />
    </div>
  </article>
  <aside
    class="mx-auto mt-4 flex flex-col items-center gap-3 rounded-xl bg-white px-6 pb-6 pt-7 text-center drop-shadow-purple sm:px-10"
  >
    {
      !!data.socials.length && (
        <>
          <h3 class="mb-0 mt-1 font-hatch text-[24px] font-medium italic text-fujo-pink">
            Share us on <em class="text-white shadow-fujo-pink">socials</em> ❤︎
          </h3>
          <ul class="mb-1 flex w-full max-w-md justify-around gap-2">
            {data.socials.map((contact) => {
              return (
                <li class="flex flex-col items-center gap-2">
                  <a href={contact.url}>
                    <Icon
                      size={24}
                      aria-labelledby={
                        contact.platform !== "web" ? "platform" : undefined
                      }
                      aria-label={
                        contact.platform === "web" ? "website" : undefined
                      }
                      name={contact.icon ?? "world-www"}
                    />
                  </a>
                  <a href={contact.url}>
                    {contact.platform === "web" ? (
                      contact.url
                    ) : (
                      <span class="capitalize" id="platform">
                        {`${contact.platform?.charAt(0)}${contact.platform?.slice(1)}`}
                      </span>
                    )}
                  </a>
                </li>
              );
            })}
          </ul>
        </>
      )
    }
    <h3
      class="mb-0 mt-1 font-hatch text-[24px] font-medium italic text-fujo-pink"
    >
      Want this in your <em class="text-white shadow-fujo-pink">inbox</em>?
    </h3>
    <div class="mb-1 w-full">
      <SubscriptionForm />
    </div>
  </aside>
</Layout>

<style>
  .prose :global(h2) :global(a) {
    @apply text-fujo-pink;
    text-decoration: none;
  }

  .prose :global(h3 a) {
    @apply text-fujo-purple;
  }
  .prose :global(h2) :global(a:hover) {
    text-decoration: underline;
    cursor: pointer;
  }

  .prose :global(li) {
    max-width: 68ch;
  }

  .prose :global(a) {
    @apply text-fujo-blue decoration-fujo-purple;
  }

  .prose :global(.toc) {
    @apply relative mx-[-30px] rounded-xl border border-dashed border-fujo-pink bg-white px-12 py-7 pb-8;
  }
  .prose :global(.toc h2) {
    @apply relative z-10  m-0 mb-2;
  }
  .prose :global(.toc-level) {
    @apply relative z-10 m-0 flex list-none flex-col gap-1  p-0 text-fujo-pink;
  }
  .prose :global(.toc-level-2) {
    @apply mt-1 gap-2 pl-6 text-base;
  }
  .prose :global(.toc-item) {
    @apply m-0 text-pretty p-0;
  }
  .prose :global(.toc-link) {
    @apply text-fujo-blue hover:text-fujo-pink;
  }

  .prose :global(img) {
    margin-inline: auto;
  }
  .prose :global(code) {
    @apply font-zeitung;
    letter-spacing: -1.5px;
  }
  .prose :global(::before) {
    content: "";
  }
  .prose :global(::after) {
    content: "";
  }

  .prose
    :global(
      :where(li p:first-child strong:first-child, li > strong:first-child)
    ) {
    @apply text-fujo-pink;
  }
</style>
