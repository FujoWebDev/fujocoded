---
import { getCollection } from "astro:content";
import Layout from "../../layouts/Layout.astro";
import { Icon } from "astro-icon/components";
import SubscriptionForm from "../../components/SubscriptionForm.astro";

export async function getStaticPaths() {
  const updates = await getCollection("updates");
  return Promise.all(
    updates.map(async (update) => ({
      params: {
        updateId: update.slug,
      },
      props: {
        Content: (await update.render()).Content,
        data: update.data,
      },
    }))
  );
}

const TITLE_CLASS =
  "mb-0 mt-0 font-hatch text-[34px] font-medium italic text-fujo-pink";

const { Content, data } = Astro.props;
---

<Layout
  title={data.og_title ? data.og_title : `${data.title} â€“ FujoCoded`}
  preview={data.og_image?.src}
  description={data.og_description || data.tagline}
>
  <article class="drop-shadow-purple m-auto rounded-xl bg-white">
    <div class="m-auto mb-8 border-b-2 border-dotted pb-8">
      <date class="mb-2" style="font-variant: small-caps;"
        >{
          data.created_at.toLocaleDateString("en-US", {
            year: "numeric",
            month: "long",
            day: "numeric",
          })
        }</date
      >
      <h1
        class="m-0 mb-1 text-left font-hatch text-[34px] text-fujo-pink"
        set:html={data.title}
      />
      {
        data.tagline && (
          <h2 class="tagline m-0 mb-2 text-left text-[24px] text-slate-500">
            {data.tagline}
          </h2>
        )
      }
    </div>
    <div class="m-auto mt-4">
      <Content />
    </div>
  </article>
  {
    !!data.socials.length && (
      <aside class="drop-shadow-purple mx-auto mt-4 flex flex-col gap-3 rounded-xl bg-white px-6 pb-6 pt-7 sm:px-10">
        <h4>Share this post on socials:</h4>
        <ul class="flex gap-3">
          {data.socials.map((contact) => {
            return (
              <li class="flex gap-3">
                <a href={contact.url}>
                  <Icon
                    size={24}
                    aria-labelledby={
                      contact.platform !== "web" ? "platform" : undefined
                    }
                    aria-label={
                      contact.platform === "web" ? "website" : undefined
                    }
                    name={contact.icon ?? "world-www"}
                  />
                </a>
                <a href={contact.url}>
                  {contact.platform === "web" ? (
                    contact.url
                  ) : (
                    <span class="sr-only sm:not-sr-only" id="platform">
                      {contact.platform}
                    </span>
                  )}
                </a>
              </li>
            );
          })}
        </ul>
      </aside>
    )
  }
  <aside
    class="drop-shadow-purple mx-auto mt-4 flex flex-col gap-3 rounded-xl bg-white px-8 py-10 sm:px-10"
  >
    <div>
      <h2 class:list={[TITLE_CLASS, "text-center"]}>
        Get <em class="text-white shadow-fujo-pink">Updates</em>
      </h2>
      <SubscriptionForm />
    </div>
  </aside>
</Layout>
