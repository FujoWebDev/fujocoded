---
import { getCollection } from "astro:content";
import Layout from "../../layouts/Layout.astro";

const updates = (await getCollection("updates", (update) => !update.data.unlisted)).toSorted((elementA, elementB) => {
    return (
      elementB.data.created_at.valueOf() - elementA.data.created_at.valueOf()
    );
  });
---

<Layout>
    <h1 class="font-hatch text-[34px] text-fujo-blue text-center mb-4">Updates</h1>
    <ol class="flex flex-col gap-4">
      {updates.map((update) => {
        return (
          <li class="flex flex-col items-center">
            <article class="flex flex-col gap-2 px-6 sm:px-10 pb-6 pt-7 mx-4 rounded-xl bg-white drop-shadow-lg">
              <h2 class="font-hatch text-fujo-purple "><a href={`/updates/${update.slug}`} set:html={update.data.title} /></h2>
              <p>{
                update.data.created_at.toLocaleString("en", {
                  weekday: "long",
                  year: "numeric",
                  month: "long",
                  day: "numeric",
                })
              }</p>
              {!!update.data.tags.length && <ul class="flex flex-wrap gap-2">
                {update.data.tags.map((tag) => <li class="border border-black rounded-md px-2" data-tag={tag}>{tag}</li>)}
              </ul>}
              {update.data.tagline && <p class="tagline">{update.data.tagline}</p>}
              </article> 
          </li>
        )
      })}
    </ol>
</Layout>

<style>
  article {
    width: min(100% - 32px, 65ch);
  }
</style>
