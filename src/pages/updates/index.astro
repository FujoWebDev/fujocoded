---
import { getCollection } from "astro:content";
import Layout from "../../layouts/Layout.astro";
import TagList from "../../components/TagList.astro";

const updates = (
  await getCollection("updates", (update) => !update.data.unlisted)
).toSorted((elementA, elementB) => {
  return (
    elementB.data.created_at.valueOf() - elementA.data.created_at.valueOf()
  );
});
---

<Layout>
  <a href="#updates">
    <h1 id="updates" class="text-white">Updates</h1>
  </a>
  <ol class="flex flex-col gap-4">
    {
      updates.map((update) => {
        return (
          <li class="flex flex-col items-center rounded-xl bg-white drop-shadow-purple">
            <article class="flex flex-col gap-2 px-6 pb-6 pt-7 sm:px-10">
              <date
                class="text-[16px] text-slate-500"
                style="font-variant: small-caps;"
              >
                {update.data.created_at.toLocaleString("en", {
                  weekday: "long",
                  year: "numeric",
                  month: "long",
                  day: "numeric",
                })}
              </date>
              <h2 class="mb-1 mt-1 font-hatch text-fujo-pink">
                <a
                  href={`/updates/${update.slug}`}
                  set:html={update.data.title}
                  class="!not-italic !text-fujo-pink !no-underline"
                />
              </h2>

              {!!update.data.tags.length && <TagList tags={update.data.tags} />}
              {update.data.tagline && (
                <p class="tagline">{update.data.tagline}</p>
              )}
            </article>
          </li>
        );
      })
    }
  </ol>
</Layout>

<style>
  article {
    width: min(100% - 32px, 75ch);
  }

  h1 {
    text-shadow:
      0 2px 6px rgba(255, 56, 235, 0.7),
      0 3px 12px rgba(77, 46, 145, 0.4);
  }
</style>
